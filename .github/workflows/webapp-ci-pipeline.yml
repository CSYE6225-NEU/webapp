# .github/workflows/pr-check.yml
name: WebApp PR Validation

on:
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: '18'
  BUILD_PATH: 'infra/packer/dist'
  BINARY_NAME: 'webapp'

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Lint Code
        run: |
          if [ -f .eslintrc.js ] || [ -f .eslintrc.json ]; then
            npx eslint . --max-warnings=0
          else
            echo "No ESLint configuration found. Skipping linting."
          fi
        continue-on-error: true
      
      - name: Security Scan
        run: npm audit --production
        continue-on-error: true

  run-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: validate
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Create Environment File
        run: |
          cat <<EOF > .env
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_USER=${{ secrets.DB_USER }}
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          DB_NAME=${{ secrets.DB_NAME }}
          PORT=${{ secrets.PORT }}
          EOF
      
      - name: Run Tests
        run: npm test

  validate-packer:
    name: Validate Infrastructure Code
    runs-on: ubuntu-latest
    needs: run-tests
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: ${{ env.NODE_VERSION }}
          install-pkg: 'true'
          install-packer: 'true'
      
      - name: Build Binary
        uses: ./.github/actions/build-binary
        with:
          output-path: ${{ env.BUILD_PATH }}
          binary-name: ${{ env.BINARY_NAME }}
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Initialize Packer
        working-directory: infra/packer
        run: packer init .
      
      - name: Check Packer Formatting
        working-directory: infra/packer
        run: |
          if packer fmt -check -diff .; then
            echo "Packer format is correct."
          else
            echo "Packer format check failed. Run 'packer fmt' locally to fix formatting."
            exit 1
          fi
      
      - name: Validate Packer Configuration
        working-directory: infra/packer
        run: |
          packer validate \
            -var "target_account_id=dummy-account" \
            -var "gcp_dev_project=dummy-project" \
            -var "gcp_target_project=dummy-project" \
            -var "aws_build_region=us-east-1" \
            -var "gcp_build_zone=us-east1-b" \
            -var "aws_vm_size=t2.micro" \
            -var "gcp_vm_type=e2-medium" \
            -var "gcp_storage_region=us" \
            machine-image.pkr.hcl

  workflow-summary:
    name: PR Validation Summary
    if: always()
    needs: [validate, run-tests, validate-packer]
    runs-on: ubuntu-latest
    
    steps:
      - name: Generate Status Report
        run: |
          echo "# Pull Request Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "Run completed at $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Job Results" >> $GITHUB_STEP_SUMMARY
          echo "- Code Validation: ${{ needs.validate.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.run-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Infrastructure Validation: ${{ needs.validate-packer.result }}" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.validate.result }}" == "success" && "${{ needs.run-tests.result }}" == "success" && "${{ needs.validate-packer.result }}" == "success" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All checks have passed successfully. This PR is ready for review." >> $GITHUB_STEP_SUMMARY
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Some checks have failed. Please review the job logs for details." >> $GITHUB_STEP_SUMMARY
          fi