name: WebApp CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: '18'
        
      - name: Prepare MySQL
        run: |
          for i in {30..0}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" --silent; then
              echo "MySQL is up and running"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done
          if [ "$i" = 0 ]; then
            echo "ERROR: MySQL failed to start"
            exit 1
          fi
          
      - name: Create Environment File
        run: |
          cat <<EOF > .env
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_USER=${{ secrets.DB_USER }}
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          DB_NAME=${{ secrets.DB_NAME }}
          PORT=${{ secrets.PORT }}
          EOF
          
      - name: Run Tests
        run: npm test

  validate_packer:
    name: Validate Packer Script
    runs-on: ubuntu-latest
    needs: run-tests
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          node-version: '18'
          install-pkg: 'true'
          install-packer: 'true'
        
      - name: Build Binary
        uses: ./.github/actions/build-binary
        with:
          output-path: 'infra/packer/dist'
          binary-name: 'webapp'
          node-version: '18'
      
      - name: Initialize Packer
        working-directory: infra/packer
        run: packer init .
      
      - name: Check Packer Formatting
        working-directory: infra/packer
        run: |
          if packer fmt -check -diff .; then
            echo "Packer format is correct."
          else
            echo "Packer format check failed. Run 'packer fmt' locally to fix formatting."
            exit 1
          fi
      
      - name: Validate Packer Configuration
        working-directory: infra/packer
        run: |
          packer validate \
            -var "target_account_id=dummy-account" \
            -var "gcp_dev_project=dummy-project" \
            -var "gcp_target_project=dummy-project" \
            -var "aws_build_region=us-east-1" \
            -var "gcp_build_zone=us-east1-b" \
            -var "aws_vm_size=t2.micro" \
            -var "gcp_vm_type=e2-medium" \
            -var "gcp_storage_region=us" \
            machine-image.pkr.hcl